#spring.jpa.hibernate.ddl-auto= update
#spring.datasource.url=jdbc:mysql://bnb1xlhfnz9yuinrkaco-mysql.services.clever-cloud.com/bnb1xlhfnz9yuinrkaco
#spring.datasource.username=un4u52obf7hwsg3q
#spring.datasource.password=zaoOsjNwpxqFBEYmjQoJ
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.format_sql= true
#spring.jpa.properties.hibernate.show_sql= true

# sent mail

## default connection pool
#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5
#
### PostgreSQL
#spring.datasource.url=jdbc:postgresql://lec2-52-86-56-90.compute-1.amazonaws.com/d60q90t2da6dn
#spring.datasource.username=ogrmgphlibjmdg
#spring.datasource.password=2b55bbdca23c767d715a79ea2bd56c07fc823a19308e90cdd1bb9c4c991a0baf
#
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#
##drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto= update
#
#server.port=${PORT:8080}


spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/business
spring.datasource.username=postgres
spring.datasource.password=admin

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto= update

server.port=${PORT:8080}


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=hoaithuong.data@gmail.com
spring.mail.password=qtrmlfzksrixvwun

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable = true


jwt.key = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9okedhfjdsfhsdjfsdfsdfse


spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER